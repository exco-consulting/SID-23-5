<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<title>Entity Catalog ABE</title>
<link href="../../../../../css/ea.css" rel="stylesheet" type="text/css" />
<script>
function initPage(src) {	
	if(parent==this&&(this.location+"").indexOf('EARoot')!=-1)
		document.location=(this.location+"").substring(0,(this.location+"").indexOf('EARoot'))+"index"+(this.location+"").substring((this.location+"").lastIndexOf('.'))+"?goto="+((this.location+"").substring((this.location+"").indexOf('EARoot')+7,(this.location+"").lastIndexOf('.')).replace(/\//g,':').replace(/EA/g,""));
	else
		parent.initPage(src);
}

function nameClassifier(name, separator)
{
  var str = name;
  var classifierName;
  var node = document.getElementById('name_classifier');
  if(node != null)
  {
    classifierName = node.innerHTML;
  }
  if(classifierName != "")
  {
   str += separator + classifierName;
  }
  
  return str;
}
</script>
</head>
<body onload="initPage(this);" class="Content">
<div class="pageHeader"></div>
<div class="PageBody">
	<div id="name_classifier" style="display: none;"></div>
	<span class="ObjectTitle"><script type="text/javascript">document.write(nameClassifier("Entity Catalog ABE", " : "))</script>    </span>
	
		<div class="ObjectDetailsNotes">The Entity Catalog ABE represents specifications and entities and their attributes, and associations for EntityCatalogSpecification, FederatedCatalogSpecification, EntityCatalog, and FederatedCatalog&lt;br/&gt;&lt;br/&gt;&lt;font color=&quot;#e0121d&quot;&gt;&lt;b&gt;Entity Catalog and Federated Catalog&lt;/b&gt;&lt;/font&gt;&lt;br/&gt;&lt;font color=&quot;#29313b&quot;&gt;There are many cases when the specialization of the Catalog entities into ones for Product, Service, and Resource is not appropriate. Here are some examples below:&lt;/font&gt;&lt;br/&gt;&lt;ul&gt;<br />&lt;li&gt;&lt;font color=&quot;#29313b&quot;&gt;UC1: A wholesale SP organization wants to define a catalog of Price Condition specifications, so that the marketing department can assign Price Conditions to new product offerings in a consistent manner.&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font color=&quot;#29313b&quot;&gt;UC2: A fieldforce organization requires a catalog of Job Plan specifications, which they may use to define and allocate Job Plans to their internal and external subcontractors when they undertake infrastructure tasks.&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font color=&quot;#29313b&quot;&gt;UC3: A Catalog designer is in charge of specifying the TOSCA node templates, the TOSCA relationship templates and the TOSCA capability templates that will be available to build topology templates for the services in a SP organization. He requires to define a catalog to contain such kind of entities.&lt;/font&gt;&lt;/li&gt;&lt;/ul&gt;<br />&lt;font color=&quot;#29313b&quot;&gt;It is clear, from the use cases above, that the corresponding entities cannot be categorised as Resource, Service or Product.&lt;/font&gt;&lt;br/&gt;&lt;font color=&quot;#29313b&quot;&gt;For this reason, there is a need to introduce catalogs that could contain any specification and any entity and combine (federate) them in any way and to be able to create them dynamically at run time. &lt;/font&gt;&lt;br/&gt;&lt;font color=&quot;#e0121d&quot;&gt;&lt;b&gt;Examples&lt;/b&gt;&lt;/font&gt;&lt;br/&gt;&lt;font color=&quot;#29313b&quot;&gt;The following examples illustrate these requirements.&lt;/font&gt;&lt;br/&gt;&lt;font color=&quot;#29313b&quot;&gt;&lt;b&gt;Creating a VNFCatalog&lt;/b&gt;&lt;/font&gt;&lt;br/&gt;&lt;font color=&quot;#29313b&quot;&gt;A VNFCatalog is a fundamental requirement of ETSI NFV compliance. However, the ETSI NFV definition of a VNF Catalog is not specific, so vendor and provider implementations vary widely. Specifically:&lt;/font&gt;&lt;br/&gt;&lt;ul&gt;<br />&lt;li&gt;&lt;font color=&quot;#29313b&quot;&gt;VNF is not always offered as a Product&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font color=&quot;#29313b&quot;&gt;A VNF typically consumes Resources, but does not have to expose them&lt;/font&gt;&lt;/li&gt;&lt;/ul&gt;<br />&lt;font color=&quot;#29313b&quot;&gt;A VNF typically produces Services but does not have to expose them. &lt;/font&gt;&lt;br/&gt;Therefore, a VNFCatalog can be something else than a ProductCatalog, ResourceCatalog or ServiceCatalog.&lt;br/&gt;&lt;b&gt;Dynamic NFV Catalog Federation&lt;/b&gt;&lt;br/&gt;The capability to define and federate dynamically generic catalogs containing items belonging to both Service and Resource domains is illustrated in the Dynamic NFV Catalog Federation User Stories developed in ZOOM. Additional examples can be found in the Digital Services Reference Architecture Guide / Catalog Federation Direction tab.&lt;br/&gt;&lt;b&gt;Catalog of atomic TOSCA Templates (Nodes and Capabilities)&lt;/b&gt;&lt;br/&gt;A Supplier builds atomic and composite value-added functions (aka. Topology Templates in TOSCA) that are ultimately sold to Service Providers. This Supplier has decided to use TOSCA to build the specifications of these functions.&lt;br/&gt;The first important internal step is for the Supplier to create a Catalog of Node Types, Node Templates and Capability Types and Capability Templates that will be available to his team of designers when building the functions.&lt;br/&gt;This Use Case is extensively developed in section 2.26 of the GB 978 document. It uses some of the key concepts of the TOSCA OASIS standard mapped to Entity Specification of the SID Information Model.&lt;br/&gt;&lt;b&gt;Catalog of composite TOSCA Templates (Topologies)`&lt;/b&gt;&lt;br/&gt;Atomic TOSCA Templates (Nodes and Capabilities) can be assembled in a graph structure to form a composite Template (aka Service Template in TOSCA language).To be further studied.&lt;br/&gt;&lt;br/&gt;</div>

	
	<table border="0" cellpadding="0" cellspacing="0" class="ObjectDetails">

		<tr>
			<td class="ObjectDetailsTopic">Release:</td>
			<td class="ObjectDetailsValue">23.5</td>
		</tr>
				<tr>
			<td class="ObjectDetailsTopic">Modified:</td>
			<td class="ObjectDetailsValue">1/3/2024 12:04:54 PM</td>
		</tr>
		<tr>
			<td class="ObjectDetailsTopic">Status:</td>
			<td class="ObjectDetailsValue">Team Approved</td>
		</tr>
		<tr >
			<td class="ObjectDetailsTopic">Appears In:</td>
			<td class="ObjectDetailsValue"></td>
		</tr>

		<tr style="height: 10px"><td colspan="2"></td></tr>
		<tr>
			<td class="ObjectDetailsTopic"><img src="../../../../../images/plus03.gif" align="absmiddle" id="proj" onclick="parent.toggleData(this.id)" />Project:</td>
			<td class="ObjectDetailsValue"></td>
		</tr>
		<tr id="proj00" style="display: none;">
			<td class="ObjectDetailsTopic" style="padding-left: 18px;">Author:</td>
			<td class="ObjectDetailsValue">Giu Platania</td>
		</tr>
		<tr id="proj01" style="display: none;">
			<td class="ObjectDetailsTopic" style="padding-left: 18px;">Version:</td>
			<td class="ObjectDetailsValue">1.0.0</td>
		</tr>
		<tr id="proj02" style="display: none;">
			<td class="ObjectDetailsTopic" style="padding-left: 18px;">UUID:</td>
			<td class="ObjectDetailsValue">{F1781AF8-FC26-43ee-BB32-2C2442B74B1B}</td>
		</tr>
			<tr id="proj04" style="display: none;">
				<td class="ObjectDetailsTopic" style="padding-left: 18px;">Created:</td>
				<td class="ObjectDetailsValue">1/10/2022 12:02:40 PM</td>
		</tr>
	</table>

	<div class="TableGroup" id="TableGroup">
		<ul class="ItemTitle">
			<li onClick="parent.toggleItem('TaggedVal');" id="TaggedValTitle">Tagged Values</li>
		</ul>
<div class="ObjectDetails" id="TaggedValTable">
	<table align="center" border="0" cellspacing="0" cellpadding="0" class="ObjectDetails">
		<tr>
			<td width="50%" class="TableHeading">Property</td>
			<td width="50%" class="TableHeading">Value</td>
		</tr>
					<tr>
				<td width="50%" class="TableRow" valign="top">rsa_guid</td>
				<td width="50%" class="TableRow" valign="top">_2T30sDuKEeWSTvffkuTybA</td>
			</tr>	
			<tr>
				<td class="TableRowBottomDashed"  colspan="2">
					<div class="DetailsDivParent"><img src="../../../../../images/minus03.gif" align="absmiddle" id="DetailsImageScenario16730" onclick="parent.toggleDiv('detailsDIVScenario16730','DetailsImageScenario16730')" />Specification:
						<div id="detailsDIVScenario16730" class="DetailsDiv" >
						&nbsp;
						</div>
					</div>
				</td>
			</tr>
	</table>
</div>	</div>
 </div>
   <div align="center"></div>
  <div align="center">Â©2023 TM Forum</div> 
</body>
</html>